# 多环境配置文件激活属性
# 数据库访问配置
# 主数据源，默认的
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/live_room?characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
spring.datasource.username=root
spring.datasource.password=
#spring.datasource.url=jdbc:mysql://122.144.139.174:3306/live_room?characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
#spring.datasource.username=live
#spring.datasource.password=1q2w3e4r
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

spring.jpa.database = MYSQL
spring.jpa.show-sql = true
spring.jpa.openInView= true
spring.jpa.generate-ddl= true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

server.port=80

#格式化返回JSON日期类型
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

spring.mvc.view.prefix= /
spring.mvc.view.suffix= .html

#云片key
yunpian.api.key=ebbc6d4240c253a574adce37bd0c3820

#亲加后台账号
GOTYE_EMAIL=1299681342@qq.com
#亲加后台密码
GOTYE_PASSWORD=shanghaisj
#亲加后台AccessSecret 登陆后台可查看
GOTYE_ACCESS_SECRET=47e19f08f08a47c186c36beaa5cd62b8
#1-微信登陆 2-游客登陆
GOTYE_LOGTYE_TYPE = 2





